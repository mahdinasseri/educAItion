{
  "name": "EducAItion",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "id": "b89b147e-06f1-4c14-9ade-7f8cd7ab0e86",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -420,
        120
      ],
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Customer Merger').item.json.chatID }}",
        "text": "=\n{{ $('Select New Word').item.json.definition == null ? $('Agent New Word').item.json.output : $('Select New Word').item.json.definition\n}} ",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        672,
        -475
      ],
      "id": "a10320fc-a96c-4091-84e1-3066a08b3155",
      "name": "Telegram",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select w.id,w.word , wd.definition,\n  0 as box\n  from words w\n  left join word_definitions wd on wd.word_id=w.id\n  where w.id not in (\n  select word_id from user_words where user_id={{ $json.id }}\n  )\nORDER BY RAND()\nLIMIT 1;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -740,
        -400
      ],
      "id": "3c232570-9f3e-42de-b561-f6e8065c1fed",
      "name": "Select New Word",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select id,name,chatID from customers where chatID is Not Null;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -1180,
        100
      ],
      "id": "bac12b38-bdfc-414e-8e80-534c4bc8b8c8",
      "name": "Get All Users",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "user_words",
          "mode": "list",
          "cachedResultName": "user_words"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "user_id",
              "value": "={{ $('Customer Merger').item.json.id }}"
            },
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "box",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        892,
        -175
      ],
      "id": "db19b4f8-caf1-45b8-abd9-272442ebe3b8",
      "name": "Insert in user_words",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Teach this word: '{{ $json.word }}'",
        "options": {
          "systemMessage": "=\n### 📘 Prompt: Teach a New English Word\n\n**Objective:** Introduce and teach one new English word to an English learner in a clear, comprehensive, and memorable way.\n\n---\n\n**Instructions:**\n\n{word} : Include part of speech (noun, verb, adjective, etc.). {Definition: Provide a simple, clear definition suitable for intermediate learners.}, {Pronunciation: Write the phonetic pronunciation (IPA or simplified format). Add an audio pronunciation if possible.}\n\n* List 2–3 common synonyms.\n* List 1–2 antonyms.\n\n* Give 2–3 example sentences (professional and casual if possible).\n\n**Visual or Metaphor**: * Offer a metaphor, image, or situation that helps the learner remember the word."
        }
      },
      "id": "18f6b990-3321-4578-ae96-c72dd14d7ddf",
      "name": "Agent New Word",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        76,
        -100
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1400,
        100
      ],
      "id": "a2c277c2-1d50-40bd-b542-d1fed52caa06",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91747e92-2108-47df-b184-966c229dedca",
              "leftValue": "={{ $json.definition }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -520,
        -400
      ],
      "id": "f9d403d7-814b-4817-a722-4bbca978b49d",
      "name": "If"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "word_definitions",
          "mode": "list",
          "cachedResultName": "word_definitions"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "definition",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        452,
        -50
      ],
      "id": "4a97a174-549a-4b86-9a24-787df7d394e0",
      "name": "Insert in word definitions",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1620,
        -600
      ],
      "id": "0fa31376-6f76-425e-95d5-2bc01f44b0b4",
      "name": "Telegram Trigger",
      "webhookId": "04cf13b3-4366-4812-a29e-95ed04216493",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "chatID",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            },
            {
              "column": "name",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.first_name }} {{ $('Telegram Trigger').item.json.message.chat.last_name }}"
            },
            {
              "column": "email",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.username }}"
            }
          ]
        },
        "options": {
          "skipOnConflict": true
        }
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -520,
        -700
      ],
      "id": "f3664aae-2c48-4b21-aa95-44a5d47c5fa4",
      "name": "Add new User",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * from customers where chatID = {{ $('Telegram Trigger').item.json.message.chat.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -960,
        -700
      ],
      "id": "b5e4030c-9367-4d7b-a139-b4c24eaf1b13",
      "name": "Add new User1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d1641c42-f526-4a95-9c48-873c1e84693d",
              "leftValue": "={{ $json.chatID }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -740,
        -700
      ],
      "id": "4908b14e-e4bd-4e71-aebd-130a3c66741c",
      "name": "If1"
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "=A realistic, educational illustration to teach the word '{{ $json.word }}'. The scene should clearly and memorably represent the meaning of the word for language learners. Use simple composition, limited color palette, and no unnecessary detail. Format: square aspect ratio, optimized for a file size under 100KB. Clean background, easily recognizable elements.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -222,
        -500
      ],
      "id": "9adcb109-b41f-4c27-a8c2-e4ef4a370969",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=EducAItion/img/{{ $('Select New Word').item.json.id }}.{{ $json.fileExtension }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        154,
        -500
      ],
      "id": "0aadb484-ae46-4cba-9a03-f690a7652041",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "output": "empty"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        452,
        -500
      ],
      "id": "b9f5e666-bedc-43df-b3b4-397ba4ad7643",
      "name": "Merge1"
    },
    {
      "parameters": {
        "fileSelector": "=EducAItion/img/{{ $('Select New Word').item.json.id }}.{{ $('Read/Write Files from Disk').item.json.fileExtension }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        892,
        -525
      ],
      "id": "756a95b8-54a0-4cb4-a8ca-3b6ed9bd99f2",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c628d7a2-a003-42bc-987b-0addcab3cf8d"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c210f6ae-37fb-4b06-b5c3-f4674e522307",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/newword",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e9bd9a1b-1f23-4756-9cb0-0fb78660f432",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/review",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1180,
        -600
      ],
      "id": "fe68a56a-6c1a-4bd2-a833-b5cee667de25",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "where": {
          "values": [
            {
              "column": "chatID",
              "value": "={{ $json.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -1400,
        -600
      ],
      "id": "7e1f91ae-fd1c-42d8-b344-fa2bc1c03453",
      "name": "Which User",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -960,
        -400
      ],
      "id": "6c22be1a-2dfb-4893-a47a-6303c089c694",
      "name": "Customer Merger"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Customer Merger').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "={{ $('Select New Word').item.json.word }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1112,
        -525
      ],
      "id": "4a194077-1ccc-4ba6-bcf8-e53b2fa69e1a",
      "name": "Telegram - Send Image",
      "webhookId": "a30990a7-9a3c-43ba-a284-d9285e273b52",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "Welcome, \\n command /newword to start",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -222,
        -700
      ],
      "id": "5a0f742a-aa91-45af-9aba-0455a567651e",
      "name": "Welcome mEssage",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.concatenated_word }}",
        "options": {
          "systemMessage": "=### 📚 Prompt: Create a Short Reading Using All Input Words\n\n**Objective:**\nWrite a short reading passage using all the given words. The words may not be related, so the passage should be organized into **multiple short, connected or separate paragraphs**, each naturally using one or more of the words.\n\n---\n\n**Instructions for Output:**\n\n1. Accept a list of 5–10 English words.\n2. Write 1–2 short paragraphs for each word (or for small groups of them).\n3. Make the paragraphs clear and simple, suitable for B1–B2 level learners.\n4. Bold each target word exactly once when used in the text.\n5. Each paragraph should feel like a mini-scene, idea, or situation.\n6. Keep the tone neutral or slightly creative (realistic, story-style, or informative).\n7. Avoid using any word more than once in bold.\n8. End the passage with a learner-friendly question or thought to reflect on.\n"
        }
      },
      "id": "b4b4f47d-bdda-4b3a-90b7-50148bc11e3e",
      "name": "Agent Review",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -300,
        575
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Customer Merger1').item.json.chatID }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        154,
        575
      ],
      "id": "fec6c1a6-9ab8-4aef-b834-751ebdca5fcf",
      "name": "Telegram1",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "user_words",
          "mode": "list",
          "cachedResultName": "user_words"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "user_id",
              "value": "={{ $('Split Out').item.json.user_id }}"
            },
            {
              "column": "word_id",
              "value": "={{ $('Split Out').item.json.word_id }}"
            },
            {
              "column": "box",
              "value": "={{$json.data.approved==true ? $('Split Out').item.json.box + 1 : 1 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1708,
        200
      ],
      "id": "b3bc6ce4-ac84-4e4e-8f36-dfebad13539a",
      "name": "Insert Reviewed Words in user_words2",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        892,
        175
      ],
      "id": "13f301d2-081a-43a4-bc75-604147f4e9d9",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "chatId": "={{ $('Summarize').item.json.chatID }}",
        "text": "=Today's Words for Review:\n{{ $json.output }}\n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1780,
        500
      ],
      "id": "73c997da-1b25-485b-8619-e1dff46b4db3",
      "name": "Telegram3",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.concatenated_word }}",
        "options": {
          "systemMessage": "=you are an english teacher.\ngive definitions of these words, one-by-one, each in one line\nobjective: leaarn me the meaning of words.\n\n"
        }
      },
      "id": "3e5b3e1d-794f-4cd0-a88a-e070e20181b0",
      "name": "All Definition Review words",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1400,
        480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH ranked_user_words AS (\n  SELECT *, \n         ROW_NUMBER() OVER (PARTITION BY word_id ORDER BY insertion_time DESC) AS rn\n  FROM user_words\n  WHERE user_id = {{ $json.id }}\n)\nSELECT \n  w.word,\n  ruw.user_id, \n  c.chatID,\n  ruw.word_id, \n  ruw.box AS box,\n  CASE\n    WHEN DATEDIFF(NOW(), ruw.insertion_time) > POWER(2, box - 1) THEN '0-scheduled'\n    ELSE '1-random'\n  END AS method\nFROM ranked_user_words ruw\n  join words w on w.id = ruw.word_id\n  join customers c on c.id=ruw.user_id\nWHERE ruw.rn = 1\norder by method, rand()\nlimit 7;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -740,
        325
      ],
      "id": "bc218ca7-dc2b-4e3e-9a16-bea72e7e3f15",
      "name": "Load Review words",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "word",
              "separateBy": ", "
            }
          ]
        },
        "fieldsToSplitBy": "user_id, chatID",
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        -520,
        500
      ],
      "id": "677bd8fb-172e-4135-8507-1c99ba614f8b",
      "name": "Summarize"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1120,
        520
      ],
      "id": "0d5238f9-c9f4-4f0e-af83-a00c7bd0fe07",
      "name": "Merge3"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 16,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1400,
        475
      ],
      "id": "3d35686d-f586-4a9e-8585-0f8ad04bc2e8",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "where": {
          "values": [
            {
              "column": "chatID",
              "condition": "IS NOT NULL"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -1180,
        475
      ],
      "id": "15537d4e-b5f1-495c-a8c5-4197ffbabd58",
      "name": "MySQL",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Customer Merger1').item.json.chatID }}",
        "message": "=Box {{ $json.box }}: Do you remember **{{ $json.word }}**?",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "approveLabel": "✅ Yes I do.",
            "disapproveLabel": "❌ No I did not."
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 6
            }
          }
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1112,
        25
      ],
      "id": "46b4b55e-06a9-4d9e-9b26-3cdadeb015dc",
      "name": "Telegram2",
      "webhookId": "59615702-b17d-4591-91c7-9ca3deced69c",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        452,
        175
      ],
      "id": "f20f139e-11ba-44a7-8620-0b63e9b1e005",
      "name": "Merge"
    },
    {
      "parameters": {
        "fieldToSplitOut": "word, user_id, chatID, box, method, word_id",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        672,
        175
      ],
      "id": "b31a8e34-d53b-45f3-9fd5-0b206b60106c",
      "name": "Split Out"
    },
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "id": "f7f3ee13-fca1-49ef-9d90-8854da0c0dbd",
      "name": "OpenAI Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        560,
        1000
      ],
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8e997606-4689-4541-9820-7da8ef6a62ed",
              "leftValue": "={{ $('Split Out').item.json.method }}",
              "rightValue": "0-schadule",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1410,
        125
      ],
      "id": "3dce5fe2-4b6e-41bd-892a-653b4c712629",
      "name": "If2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -960,
        325
      ],
      "id": "6218f2af-7149-4549-a0cc-157e99a1c3a0",
      "name": "Customer Merger1"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent New Word",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Insert in user_words",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select New Word": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Users": {
      "main": [
        [
          {
            "node": "Customer Merger",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Agent New Word": {
      "main": [
        [
          {
            "node": "Insert in word definitions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Users",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Agent New Word",
            "type": "main",
            "index": 0
          },
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Which User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new User": {
      "main": [
        [
          {
            "node": "Welcome mEssage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new User1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "Add new User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Telegram - Send Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Add new User1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Customer Merger",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Customer Merger1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Which User": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Customer Merger": {
      "main": [
        [
          {
            "node": "Select New Word",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Review": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Insert Reviewed Words in user_words2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All Definition Review words": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Review words": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Agent Review",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "All Definition Review words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "MySQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL": {
      "main": [
        [
          {
            "node": "Customer Merger1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Review",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "All Definition Review words",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Insert Reviewed Words in user_words2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Customer Merger1": {
      "main": [
        [
          {
            "node": "Load Review words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Tehran",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "2506a35f-9d5e-402b-b082-93c8e49b845a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "69d0d047188cb9156a6f7134cb2977dd1da142c7fa73b37c2ba1fed7d3c72efb"
  },
  "id": "w1Zvs3MMF3yljVfk",
  "tags": []
}
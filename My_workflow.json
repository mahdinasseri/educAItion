{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4.1",
        "options": {}
      },
      "id": "b89b147e-06f1-4c14-9ade-7f8cd7ab0e86",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        100,
        640
      ],
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Get All Users').item.json.chatID }}",
        "text": "=Hi  {{ $('Get All Users').item.json.name }}\n{{ $json.definition == null ? $json.output : $json.definition\n}} ",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        20
      ],
      "id": "a10320fc-a96c-4091-84e1-3066a08b3155",
      "name": "Telegram",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select w.id,w.word , wd.definition,\n  0 as box\n  from words w\n  left join word_definitions wd on wd.word_id=w.id\n  where w.id not in (\n  select word_id from user_words where user_id={{ $json.id }}\n  )\nORDER BY RAND()\nLIMIT 1;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -220,
        0
      ],
      "id": "3c232570-9f3e-42de-b561-f6e8065c1fed",
      "name": "Select New Word",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select id,name,chatID from customers where chatID is Not Null;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -420,
        0
      ],
      "id": "bac12b38-bdfc-414e-8e80-534c4bc8b8c8",
      "name": "Get All Users",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "user_words",
          "mode": "list",
          "cachedResultName": "user_words"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "user_id",
              "value": "={{ $('Get All Users').item.json.id }}"
            },
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "box",
              "value": "={{ $('Select New Word').item.json.box + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        820,
        20
      ],
      "id": "db19b4f8-caf1-45b8-abd9-272442ebe3b8",
      "name": "Insert in user_words",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH ranked_user_words AS (\n  SELECT uw.*, \n         ROW_NUMBER() OVER (PARTITION BY uw.word_id ORDER BY uw.insertion_time DESC) AS rn\n  FROM user_words uw\n  where user_id={{ $json.id }}\n  \n),\nfiltered_user_words AS (\n  SELECT ruw.*\n  FROM ranked_user_words ruw\n  WHERE ruw.rn = 1\n   AND DATEDIFF(NOW(), ruw.insertion_time) > POWER(2, ruw.box - 1)  \n  order by ruw.word_id\n  limit 7\n)\nSELECT \n  fuw.user_id,\n  GROUP_CONCAT(w.word ORDER BY fuw.insertion_time DESC SEPARATOR ', ') AS word_list\nFROM filtered_user_words fuw\nJOIN words w ON w.id = fuw.word_id\nGROUP BY fuw.user_id;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -120,
        380
      ],
      "id": "744b444e-af70-4cd5-8312-788fa8c5ab96",
      "name": "Select Review Words",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Teach this word: '{{ $json.word }}'",
        "options": {
          "systemMessage": "=\n### 📘 Prompt: Teach a New English Word\n\n**Objective:** Introduce and teach one new English word to an English learner in a clear, comprehensive, and memorable way.\n\n---\n\n**Instructions:**\n\n{word} : Include part of speech (noun, verb, adjective, etc.). {Definition: Provide a simple, clear definition suitable for intermediate learners.}, {Pronunciation: Write the phonetic pronunciation (IPA or simplified format). Add an audio pronunciation if possible.}\n\n* List 2–3 common synonyms.\n* List 1–2 antonyms.\n\n* Give 2–3 example sentences (professional and casual if possible).\n\n**Visual or Metaphor**: * Offer a metaphor, image, or situation that helps the learner remember the word."
        }
      },
      "id": "18f6b990-3321-4578-ae96-c72dd14d7ddf",
      "name": "Agent New Word",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        200,
        -300
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.word_list }}",
        "options": {
          "systemMessage": "=### 📚 Prompt: Create a Short Reading Using All Input Words\n\n**Objective:**\nWrite a short reading passage using all the given words. The words may not be related, so the passage should be organized into **multiple short, connected or separate paragraphs**, each naturally using one or more of the words.\n\n---\n\n**Instructions for Output:**\n\n1. Accept a list of 5–10 English words.\n2. Write 1–2 short paragraphs for each word (or for small groups of them).\n3. Make the paragraphs clear and simple, suitable for B1–B2 level learners.\n4. Bold each target word exactly once when used in the text.\n5. Each paragraph should feel like a mini-scene, idea, or situation.\n6. Keep the tone neutral or slightly creative (realistic, story-style, or informative).\n7. Avoid using any word more than once in bold.\n8. End the passage with a learner-friendly question or thought to reflect on.\n"
        }
      },
      "id": "096d5fa5-77a4-4491-8199-5522ce577403",
      "name": "Agent Review",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        240,
        260
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Get All Users1').item.json.chatID }}",
        "text": "=Hi {{ $('Get All Users1').item.json.name }}\n---\n{{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        600,
        260
      ],
      "id": "bc31c677-468e-4121-9b27-486102a97952",
      "name": "Telegram1",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -620,
        0
      ],
      "id": "a2c277c2-1d50-40bd-b542-d1fed52caa06",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select id,name,chatID from customers where chatID is Not Null;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -360,
        380
      ],
      "id": "465fc683-1fe9-4d19-9f5f-2ed8d9587a27",
      "name": "Get All Users1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -620,
        380
      ],
      "id": "b313289b-f389-41e6-9a8c-b92e97f91f22",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91747e92-2108-47df-b184-966c229dedca",
              "leftValue": "={{ $json.definition }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        0,
        0
      ],
      "id": "f9d403d7-814b-4817-a722-4bbca978b49d",
      "name": "If"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "word_definitions",
          "mode": "list",
          "cachedResultName": "word_definitions"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "word_id",
              "value": "={{ $('Select New Word').item.json.id }}"
            },
            {
              "column": "definition",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        660,
        -300
      ],
      "id": "4a97a174-549a-4b86-9a24-787df7d394e0",
      "name": "Insert in word definitions",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Get All Users1').item.json.chatID }}",
        "message": "=Do you remember **{{ $json.word }}** ?",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "approveLabel": "✅ Yes I do.",
            "disapproveLabel": "❌ No I did not."
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 15,
              "resumeUnit": "minutes"
            }
          }
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1360,
        280
      ],
      "id": "0dbf7d69-5963-4ca7-bab4-59e420972348",
      "name": "Telegram2",
      "webhookId": "59615702-b17d-4591-91c7-9ca3deced69c",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH ranked_user_words AS (\n  SELECT *, \n         ROW_NUMBER() OVER (PARTITION BY word_id ORDER BY insertion_time DESC) AS rn\n  FROM user_words\n  WHERE user_id = {{ $('Get All Users1').item.json.id }}\n    \n  \n)\nSELECT \n  w.word,\n  ruw.user_id, \n  ruw.word_id, \n  ruw.box AS box\nFROM ranked_user_words ruw\n  join words w on w.id = ruw.word_id\nWHERE ruw.rn = 1\n  AND DATEDIFF(NOW(), insertion_time) > POWER(2, box - 1)\norder by ruw.word_id\nlimit 7;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        820,
        260
      ],
      "id": "47293eff-0faf-45e3-8aae-12844bf1be89",
      "name": "Insert Reviewed Words in user_words1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "user_words",
          "mode": "list",
          "cachedResultName": "user_words"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "user_id",
              "value": "={{ $('Insert Reviewed Words in user_words1').item.json.user_id }}"
            },
            {
              "column": "word_id",
              "value": "={{ $('Insert Reviewed Words in user_words1').item.json.word_id }}"
            },
            {
              "column": "box",
              "value": "={{$json.data.approved==true ? $('Insert Reviewed Words in user_words1').item.json.box + 1 : 1 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1620,
        280
      ],
      "id": "672acfb6-3ee4-4ac8-9544-9c1e572fe79e",
      "name": "Insert Reviewed Words in user_words2",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1080,
        260
      ],
      "id": "4ee4c4b4-3745-47be-9e08-c1b080a1722c",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -660,
        -760
      ],
      "id": "0fa31376-6f76-425e-95d5-2bc01f44b0b4",
      "name": "Telegram Trigger",
      "webhookId": "04cf13b3-4366-4812-a29e-95ed04216493",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "chatID",
              "value": "={{ $json.message.chat.id }}"
            },
            {
              "column": "name",
              "value": "={{ $json.message.from.first_name }}"
            },
            {
              "column": "email",
              "value": "={{ $json.message.from.username }}"
            }
          ]
        },
        "options": {
          "skipOnConflict": true
        }
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        80,
        -740
      ],
      "id": "f3664aae-2c48-4b21-aa95-44a5d47c5fa4",
      "name": "Add new User",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * from customers where chatID = {{ $json.message.chat.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -460,
        -760
      ],
      "id": "b5e4030c-9367-4d7b-a139-b4c24eaf1b13",
      "name": "Add new User1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d1641c42-f526-4a95-9c48-873c1e84693d",
              "leftValue": "={{ $json.chatID }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -260,
        -760
      ],
      "id": "4908b14e-e4bd-4e71-aebd-130a3c66741c",
      "name": "If1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.word_list }}",
        "options": {
          "systemMessage": "=you are an english teacher.\ngive definitions of these words, one-by-one, each in one line\nobjective: leaarn me the meaning of words.\n\n"
        }
      },
      "id": "654f6919-121b-4003-b6e8-3ed26ee7d355",
      "name": "Agent Review1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1480,
        620
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Get All Users1').item.json.chatID }}",
        "text": "=Today's Words for Review:\n{{ $json.output }}\n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1820,
        620
      ],
      "id": "ea2091c6-f1c0-4639-a1e7-c52763e14062",
      "name": "Telegram3",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1280,
        580
      ],
      "id": "891c60da-f08e-45b6-a1d0-9b98d019cae7",
      "name": "Merge"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent New Word",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Agent Review",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Agent Review1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Insert in user_words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select New Word": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Users": {
      "main": [
        [
          {
            "node": "Select New Word",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Review Words": {
      "main": [
        [
          {
            "node": "Agent Review",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Agent New Word": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert in word definitions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Review": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Insert Reviewed Words in user_words1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Users",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Users1": {
      "main": [
        [
          {
            "node": "Select Review Words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get All Users1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Agent New Word",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Reviewed Words in user_words1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Insert Reviewed Words in user_words2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Reviewed Words in user_words2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Add new User1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new User": {
      "main": [
        []
      ]
    },
    "Add new User1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "Add new User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Review1": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Agent Review1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Tehran",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "201d29da-cefc-4543-b674-6250471fbebf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "69d0d047188cb9156a6f7134cb2977dd1da142c7fa73b37c2ba1fed7d3c72efb"
  },
  "id": "w1Zvs3MMF3yljVfk",
  "tags": []
}
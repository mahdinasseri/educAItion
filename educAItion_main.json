{
  "name": "educAItion-main",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -660,
        279
      ],
      "id": "8631f272-62c1-4e24-95d3-70b9f3c7fd31",
      "name": "Telegram Trigger",
      "webhookId": "04cf13b3-4366-4812-a29e-95ed04216493",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "chatID",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
            },
            {
              "column": "name",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.first_name }} {{ $('Telegram Trigger').item.json.message.chat.last_name }}"
            },
            {
              "column": "email",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.username }}"
            }
          ]
        },
        "options": {
          "skipOnConflict": true
        }
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        0,
        158
      ],
      "id": "4712cf79-f2d7-4fc8-baf4-dce9690b45c1",
      "name": "Add new User",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -660,
        1620
      ],
      "id": "43f81f41-b6a6-451c-b065-74ece910e0fe",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "KoRD4FVaBuf90Plh",
          "mode": "list",
          "cachedResultName": "EducAItion- review Module"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $json.chatID }}",
            "name": "={{ $json.name }}",
            "user_id": "={{ $json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -220,
        1620
      ],
      "id": "306d0589-7df2-4eb7-947e-67b4bc2ed6cf",
      "name": "Review Module"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "KoRD4FVaBuf90Plh",
          "mode": "list",
          "cachedResultName": "EducAItion- review Module"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $json.chatID }}",
            "name": "={{ $json.name }}",
            "user_id": "={{ $json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        550,
        200
      ],
      "id": "c15fc403-7585-4c81-874a-5e028c2c098e",
      "name": "Review Module1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "XYlFwqrYJB4j01dU",
          "mode": "list",
          "cachedResultName": "educAItion - newWord"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $json.chatID }}",
            "name": "={{ $json.name }}",
            "user_id": "={{ $json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        550,
        0
      ],
      "id": "5386770e-4a5d-47ce-8061-f019f6fdf9e9",
      "name": "New word Module2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "XYlFwqrYJB4j01dU",
          "mode": "list",
          "cachedResultName": "educAItion - newWord"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $json.chatID }}",
            "name": "={{ $json.name }}",
            "user_id": "={{ $json.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -220,
        1360
      ],
      "id": "848f8d76-2a3f-4fe1-a188-695d521f76b0",
      "name": "New word Module"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 16,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -660,
        1360
      ],
      "id": "6212d5a5-1322-4e38-8704-596efe0a82b4",
      "name": "Schedule NewWord Trigger"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "where": {
          "values": [
            {
              "column": "chatID",
              "condition": "IS NOT NULL"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -440,
        1360
      ],
      "id": "40319362-3d6f-47cd-8bde-a918c5f5e331",
      "name": "Load All Users",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "select id,name,chatID from customers where chatID is Not Null;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -440,
        1620
      ],
      "id": "5cafe87d-8dbf-4f89-8f23-98a1e4fc58c0",
      "name": "Load All Users1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT count(*) have_user from customers where chatID = {{ $json.message.chat.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -440,
        279
      ],
      "id": "df517721-a2ee-4121-a4c3-edd6bb793495",
      "name": "New User or Return",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "d1641c42-f526-4a95-9c48-873c1e84693d",
              "leftValue": "={{ $json.have_user }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        279
      ],
      "id": "23dca26c-e709-445b-bbcc-0229a2795c9a",
      "name": "if New User"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *  from customers where chatID ={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        0,
        400
      ],
      "id": "0c9e5af8-f13b-44c5-8c06-06d9e8fa9d73",
      "name": "Get User",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c210f6ae-37fb-4b06-b5c3-f4674e522307",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/newword",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e9bd9a1b-1f23-4756-9cb0-0fb78660f432",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/review",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b988693b-0611-4912-8da8-4c42b263f28a",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/status",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3712db02-0e8c-444a-85aa-a43deb2fef91",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "/speak",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9cbc2bf9-cd92-4565-b613-6b86fde06623",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        220,
        358
      ],
      "id": "9cd457d3-ef55-49dc-a623-94c67a049fe9",
      "name": "Command Switch"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Welcome {{ $('Telegram Trigger').item.json.message.from.first_name }}\ncommand /newword to start",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        220,
        158
      ],
      "id": "4490bec0-c981-4328-a355-81722a0dcfd7",
      "name": "Welcome Message",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH ranked_user_words AS (\n  SELECT *, \n         ROW_NUMBER() OVER (PARTITION BY word_id ORDER BY insertion_time DESC) AS rn\n  FROM user_words\n  WHERE user_id = {{ $json.id }}\n)\nSELECT \n\n  ruw.box AS box,\n  count(DISTINCT w.word) as words\nFROM ranked_user_words ruw\n  join words w on w.id = ruw.word_id\n  join customers c on c.id=ruw.user_id\nWHERE ruw.rn = 1\n  group by box\n\nunion ALL\n  SELECT \n\n  'Total' AS box,\n  count(DISTINCT w.word) as words\nFROM ranked_user_words ruw\n  join words w on w.id = ruw.word_id\n  join customers c on c.id=ruw.user_id\nWHERE ruw.rn = 1\n  \n  \n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        550,
        400
      ],
      "id": "927ebcad-d528-44e6-acea-1ed95d5f9b29",
      "name": "Status1",
      "credentials": {
        "mySql": {
          "id": "CPMXm2kZQrLO39eF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Get User').first().json.chatID }}",
        "text": "=A summary of words in LEARNING:\n```\n{{ $json.markdown }}\n```",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1178,
        400
      ],
      "id": "53674f88-f012-4e62-bada-84de437765e2",
      "name": "Welcome Message1",
      "webhookId": "e51f2a59-a158-4229-ba49-9a09b35ab5d8",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const itemsArr = items.map(item => item.json);\nif (itemsArr.length === 0) return [];\n\n// Set headers based on the JSON keys\nconst headers = Object.keys(itemsArr[0]);\nconst headerLine = headers.join('\\t\\t') + ' \\n';\n\n\n// Build table rows\nconst rows = itemsArr.map(obj => {\nreturn headers.map(h => obj[h]).join('\\t\\t\\t') + ' \\n';\n});\n\n// Combine into single markdown string\nconst markdown = [headerLine, ...rows].join('\\n');\n\nreturn [\n  {\n    \n    json: { markdown }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        400
      ],
      "id": "9b99b7a8-38e1-4b66-85ee-26de6a6c0f95",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an experienced English language teacher helping learners improve their speaking skills.\n\n**Generate a speaking question.** (send message by sendMessage Node)  \n   - It should be relevant for English learners, focused on common speaking exam topics (e.g., daily life, hobbies, travel, work, opinions).  \n   - Make it open-ended to encourage the user to speak for at least 30 seconds.  \n   - Politely ask the user to reply with a **voice message** answering the question.  \n   \n\n\nsend meassges to this chatID:  {{ $('Telegram Trigger').item.json.message.chat.id }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        472,
        600
      ],
      "id": "89fa3bf1-5d8e-4bfd-99e6-5fcbce1322ce",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        440,
        820
      ],
      "id": "9683893b-ebfa-4b82-8bcf-b71e2bcdd173",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        560,
        820
      ],
      "id": "a1d3266a-289b-4287-84d7-3b8918aeb373",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Get User').first().json.chatID }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "replyMarkup": "forceReply",
        "forceReply": {
          "force_reply": true
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        680,
        820
      ],
      "id": "c0b3840d-94d7-4fea-9a66-c43a2951c543",
      "name": "sendMessage",
      "webhookId": "9a735357-e813-4a28-b31a-a29abcf8f918",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        550,
        1000
      ],
      "id": "112f06e6-ba05-4e9e-87d1-cd3a661b2d43",
      "name": "Telegram",
      "webhookId": "4d73297d-a42d-4e44-bc8f-772f7b86e413",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "en"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        880,
        1000
      ],
      "id": "4ba17556-fa86-4373-b762-edc8f412ddf9",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1128,
        1220
      ],
      "id": "a165cb67-344b-4f01-bfcf-28435866c24f",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"feedback\": \"Write the feedback here as a standalone message.\",\n  \"model_answer\": \"Write the model answer here as a standalone message.\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1248,
        1220
      ],
      "id": "a3a66c24-14d4-457b-9f4e-48a05b0a16be",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output.feedback }}\n{{ $json.output.model_answer}}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1476,
        900
      ],
      "id": "fe8fb71c-3de0-4114-b884-82e9eb5fa3f3",
      "name": "TTS",
      "credentials": {
        "openAiApi": {
          "id": "3AAHNy1d6f7hmvmG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1696,
        900
      ],
      "id": "86c661a3-aa1f-4894-a2b5-601a7ec7d72c",
      "name": "SendVoice",
      "webhookId": "c6a36e31-c627-47fa-b72a-01bda169c8d3",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an experienced English teacher helping students improve their speaking skills.\n\nYour task is to analyze the user's response and provide two outputs and send both of them in one message to user via telegram (this node: \"Send Feedback and model answer to user\"):  \n1. **Feedback** – constructive suggestions for improvement.  \n2. **Model Answer** – an ideal response to the speaking question.\n\noutput format: \n{\n  \"feedback\": \"Write the feedback here as a standalone message.\",\n  \"model_answer\": \"Write the model answer here as a standalone message.\"\n}\n\n\n### 🔍 Step 1: Feedback\n- Carefully analyze the user's response for pronunciation, grammar, fluency, vocabulary, and sentence structure.\n- Focus on the most important 2–3 issues. Avoid overwhelming the learner.\n- Be supportive, friendly, and encouraging — like a patient tutor.\n- Provide clear tips to help improve the answer.\n- Use simple, easy-to-understand explanations.\n\nExample style of feedback:  \n*\"Good effort! One thing to improve is your use of the past tense — instead of 'I go', say 'I went'. Also, be careful with the pronunciation of 'comfortable'. It should sound like 'KUHM-fter-buhl'. Keep practicing — you're doing well!\"*\n\n### 📝 Step 2: Model Answer\n- Write a clear, fluent, natural-sounding answer to the same question.\n- Use vocabulary and grammar suitable for intermediate learners.\n- The answer should be in the level of 8+ for ielts.\n- Keep the tone conversational and natural — how a native speaker or advanced learner would answer.\n- Keep the answer around 4–6 sentences.\n\nStart the model answer like this:  \n*\"Here’s how I would answer this question:\"*\n\n### Tone & Style:\nSupportive, friendly, and encouraging.\n\nAvoid overly technical grammar explanations unless necessary.\n\nFocus on helping the student feel motivated to continue practicing.\n\n### ⚠️ Error Handling:\nIf the user's response is empty or not understandable, reply:\n\"I couldn’t understand your answer. Could you please try sending it again as a voice message?\"\n\n---\n\n\nThe speaking question is:  \n\"{{ $('Telegram Trigger').item.json.message.reply_to_message.text }}\"\n\nThe user's response is:  \n\"{{ $json.text }}\"",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1100,
        1000
      ],
      "id": "7696d54f-1e88-413d-b1e6-0d410090dc1b",
      "name": "AI Agent - Speaking Evaluator"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output.feedback }} {{ $json.output.model_answer}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1476,
        1100
      ],
      "id": "7f91c1a2-b060-45d0-b276-0996bb26e1e7",
      "name": "Telegram1",
      "webhookId": "e113c542-1ac9-476a-89f9-45a380ac68a0",
      "credentials": {
        "telegramApi": {
          "id": "j06hYjEcJBs3NRO4",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "New User or Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new User": {
      "main": [
        [
          {
            "node": "Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Load All Users1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule NewWord Trigger": {
      "main": [
        [
          {
            "node": "Load All Users",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load All Users": {
      "main": [
        [
          {
            "node": "New word Module",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load All Users1": {
      "main": [
        [
          {
            "node": "Review Module",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New User or Return": {
      "main": [
        [
          {
            "node": "if New User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if New User": {
      "main": [
        [
          {
            "node": "Add new User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get User": {
      "main": [
        [
          {
            "node": "Command Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Command Switch": {
      "main": [
        [
          {
            "node": "New word Module2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Review Module1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Status1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Welcome Message1": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Welcome Message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "sendMessage": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "AI Agent - Speaking Evaluator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent - Speaking Evaluator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent - Speaking Evaluator",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "TTS": {
      "main": [
        [
          {
            "node": "SendVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - Speaking Evaluator": {
      "main": [
        [
          {
            "node": "TTS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4b6be822-f794-481f-8ceb-fea9a20a0fd8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "69d0d047188cb9156a6f7134cb2977dd1da142c7fa73b37c2ba1fed7d3c72efb"
  },
  "id": "2dOVO8IzjouQ8snu",
  "tags": [
    {
      "createdAt": "2025-06-12T09:17:49.522Z",
      "updatedAt": "2025-06-12T09:17:49.522Z",
      "id": "ctP1QRHmNTJd1ue4",
      "name": "educAItion"
    }
  ]
}